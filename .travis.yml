language: python
os: linux
sudo: required
branches:
  only:
  - master
services:
- docker
matrix:
  include:
  - python: '3.7'
    dist: xenial
    sudo: true
  - python: '2.7'
    if: type != pull_request
install:
- echo "$TRAVIS_BRANCH $TRAVIS_PYTHON_VERSION $PYTHON"
- |
  if [[ "$TRAVIS_BRANCH" == "stable" ]] ; then
      pip install cibuildwheel==0.9.4 twine
  else
      if [[ "$TRAVIS_PYTHON_VERSION" == "3.7" ]] ; then
          pip install coverage coveralls
      fi
  fi
script:
- pip install .
- pingit list
- pingit export -p ..
- pingit export -p .. -o ../structure.json
- pingit import -i ../structure.json -o ../import
- pingit fetch -p ..
- pingit pull --rebase -p ..
- pingit status -p ..
- pingit archive -p .. -o ../backup
- pingit archive -p .. -o ../backup --no-timestamp
- pingit archive -p .. -o ../backup --format zip
- ls -l ../*/*/*
deploy:
  provider: pypi
  skip_existing: true
  distributions: sdist bdist_wheel
  tags: true
  on:
    branch: master
    python: 3.7
  user:
    secure: iec1AriQZv0LgbT8kw3hpakwgU2INNgKkHH1lgCm4g59NQpZQB9BLxEY4cV+1Vwf8C2Y38+4gyQD8XbsKlAklpTqfbAYDeePug2YDvwRr8JJcXckD2Z1f4/6O7V2v3i+Uh01+fCEArVDMl3WnMqn3gQzWP1V24QeLLkScfx7JtnNwEky7b4NzsH2sYeLz3Q5crSzdqc3uWKZNKD9hzJX5oxu1HTXC7Tl1fXhzVGmCCVAYMf+ZhcwxETxcSIckEmyTrS0JXMGf7CEcYPUPj+oZe65+GQrcG85XDe94C/R4E4cx72Cs2P2anRKlGR0jfjUT2X6If50ttTyflIDBliRmf364AVUyyV17l305aPPUVViL/3eoIMzpWy8DvN3lLid/gTU03oUNovqfJamKRL3esnNpn0b1JsUwomEyjhKzWYGH8N0PCTFVhCY3UGul0Vq/PzSXWBhv2MiObcju2FcIQoA1/f9r5bpOxXvTFWUeMV83twtMrlZWvKeR9ogUJYPBgAPRyJ/albrLKWcjOlpDtoZL7N5Ub9cOTuLMXGVnPRqBr0clwvTu9PtO0JARw0pHJ8f/s18GI4pwx2NT/vaMk9+D0ivygDIOxEGiGWRhfHDvOmKsglWrUK9+8c4YRjU81c78xGaQAlyU9S+0m8U0B6G4kziGPZuowSIuMT5Kyc=
  password:
    secure: ig/GEoYjXpNEMMTjoZMFEDNRbAKRAaklLxZ3otNBCjUImRMQUuVDIXZ2H4Fa24hhue3iNQyBkCgY0Ddl66rClJZjN3p2ZZbCrQqj6xcy8MF15B5G3aHHu20roSG2vArMFdsP0Z1tnjG2O0gHCsNV3Tn7/iqItlW4fQKDXHe58O/1a8CzMaundoHuwBSOlUrEHLY8z/7hUTvsyfnp+ap/Fp29W+v9byU4puO4FHDM0dcOiSW9STTly1+w/3p3QeGw8Cbz7NIdpkg+mTiJbSB4CLKc7FMR3mkrqXtV8oGV2vmBdYjFIUplVO7+ML4AgA3n+XX1J0eoS8e7L3BW+WL4iS5ikZFa/M06NKUIagIHTcwgq7ndJA8fLh/gxhDAkuKfW0J8oJ0T4FU2CEtIr9ifxkwUq3THpRvovjEQsY9C7jvkXkGXI+xSkPR2trSkdpOmPoKM7gtcmMXHiV3iZZGkp9PZ1B6ZmAPO7Q4t5M+g9YohpWJDgObfhg30yfW2mDsgN1yXKtzj7T5RYdyctrkwiTIyl0JM6pKiYfO1Gi8r9ZOH5P86BRhYSe2ueEfpH1l+lfJd5XMu2IvGJU+f68q1Lh4FXyKDNr/w7ciANgAQZOtWSilvtRPQQ+OPCOjbFjrBdb6DkSM7YH3y3qDk4VtjiCCK8qCPiBHiWbKgUQEggGo=
